# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import grpc_service.rpc.client_rpc_pb2 as client__rpc__pb2


class ClientServiceStub(object):
    """定义客户端接收领导节点请求的 gRPC 服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_id_list = channel.unary_unary(
                '/proto.ClientService/get_id_list',
                request_serializer=client__rpc__pb2.id_request.SerializeToString,
                response_deserializer=client__rpc__pb2.id_response.FromString,
                )
        self.get_single_query_result = channel.unary_unary(
                '/proto.ClientService/get_single_query_result',
                request_serializer=client__rpc__pb2.query_request.SerializeToString,
                response_deserializer=client__rpc__pb2.query_response.FromString,
                )
        self.get_data_sample = channel.unary_unary(
                '/proto.ClientService/get_data_sample',
                request_serializer=client__rpc__pb2.data_sample_request.SerializeToString,
                response_deserializer=client__rpc__pb2.data_sample_response.FromString,
                )
        self.update_id_list = channel.unary_unary(
                '/proto.ClientService/update_id_list',
                request_serializer=client__rpc__pb2.update_id_list_request.SerializeToString,
                response_deserializer=client__rpc__pb2.update_id_list_response.FromString,
                )
        self.get_column_list = channel.unary_unary(
                '/proto.ClientService/get_column_list',
                request_serializer=client__rpc__pb2.column_request.SerializeToString,
                response_deserializer=client__rpc__pb2.column_response.FromString,
                )
        self.get_psi_result = channel.unary_unary(
                '/proto.ClientService/get_psi_result',
                request_serializer=client__rpc__pb2.get_psi_result_request.SerializeToString,
                response_deserializer=client__rpc__pb2.get_psi_result_response.FromString,
                )
        self.get_dist_metric = channel.unary_unary(
                '/proto.ClientService/get_dist_metric',
                request_serializer=client__rpc__pb2.dist_metric_request.SerializeToString,
                response_deserializer=client__rpc__pb2.dist_metric_response.FromString,
                )
        self.send_psi_order = channel.unary_unary(
                '/proto.ClientService/send_psi_order',
                request_serializer=client__rpc__pb2.send_psi_order_request.SerializeToString,
                response_deserializer=client__rpc__pb2.send_psi_order_response.FromString,
                )
        self.get_encrypted_id_list = channel.unary_unary(
                '/proto.ClientService/get_encrypted_id_list',
                request_serializer=client__rpc__pb2.get_encrypted_id_request.SerializeToString,
                response_deserializer=client__rpc__pb2.get_encrypted_id_response.FromString,
                )
        self.get_double_encrypted_id_list = channel.unary_unary(
                '/proto.ClientService/get_double_encrypted_id_list',
                request_serializer=client__rpc__pb2.get_double_encrypted_id_request.SerializeToString,
                response_deserializer=client__rpc__pb2.get_double_encrypted_id_response.FromString,
                )
        self.send_double_encrypted_id_list = channel.unary_unary(
                '/proto.ClientService/send_double_encrypted_id_list',
                request_serializer=client__rpc__pb2.send_double_encrypted_id_request.SerializeToString,
                response_deserializer=client__rpc__pb2.send_double_encrypted_id_response.FromString,
                )
        self.send_psi_result = channel.unary_unary(
                '/proto.ClientService/send_psi_result',
                request_serializer=client__rpc__pb2.send_psi_result_request.SerializeToString,
                response_deserializer=client__rpc__pb2.send_psi_result_response.FromString,
                )


class ClientServiceServicer(object):
    """定义客户端接收领导节点请求的 gRPC 服务
    """

    def get_id_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_single_query_result(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_data_sample(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_id_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_column_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_psi_result(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_dist_metric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_psi_order(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_encrypted_id_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_double_encrypted_id_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_double_encrypted_id_list(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def send_psi_result(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_id_list': grpc.unary_unary_rpc_method_handler(
                    servicer.get_id_list,
                    request_deserializer=client__rpc__pb2.id_request.FromString,
                    response_serializer=client__rpc__pb2.id_response.SerializeToString,
            ),
            'get_single_query_result': grpc.unary_unary_rpc_method_handler(
                    servicer.get_single_query_result,
                    request_deserializer=client__rpc__pb2.query_request.FromString,
                    response_serializer=client__rpc__pb2.query_response.SerializeToString,
            ),
            'get_data_sample': grpc.unary_unary_rpc_method_handler(
                    servicer.get_data_sample,
                    request_deserializer=client__rpc__pb2.data_sample_request.FromString,
                    response_serializer=client__rpc__pb2.data_sample_response.SerializeToString,
            ),
            'update_id_list': grpc.unary_unary_rpc_method_handler(
                    servicer.update_id_list,
                    request_deserializer=client__rpc__pb2.update_id_list_request.FromString,
                    response_serializer=client__rpc__pb2.update_id_list_response.SerializeToString,
            ),
            'get_column_list': grpc.unary_unary_rpc_method_handler(
                    servicer.get_column_list,
                    request_deserializer=client__rpc__pb2.column_request.FromString,
                    response_serializer=client__rpc__pb2.column_response.SerializeToString,
            ),
            'get_psi_result': grpc.unary_unary_rpc_method_handler(
                    servicer.get_psi_result,
                    request_deserializer=client__rpc__pb2.get_psi_result_request.FromString,
                    response_serializer=client__rpc__pb2.get_psi_result_response.SerializeToString,
            ),
            'get_dist_metric': grpc.unary_unary_rpc_method_handler(
                    servicer.get_dist_metric,
                    request_deserializer=client__rpc__pb2.dist_metric_request.FromString,
                    response_serializer=client__rpc__pb2.dist_metric_response.SerializeToString,
            ),
            'send_psi_order': grpc.unary_unary_rpc_method_handler(
                    servicer.send_psi_order,
                    request_deserializer=client__rpc__pb2.send_psi_order_request.FromString,
                    response_serializer=client__rpc__pb2.send_psi_order_response.SerializeToString,
            ),
            'get_encrypted_id_list': grpc.unary_unary_rpc_method_handler(
                    servicer.get_encrypted_id_list,
                    request_deserializer=client__rpc__pb2.get_encrypted_id_request.FromString,
                    response_serializer=client__rpc__pb2.get_encrypted_id_response.SerializeToString,
            ),
            'get_double_encrypted_id_list': grpc.unary_unary_rpc_method_handler(
                    servicer.get_double_encrypted_id_list,
                    request_deserializer=client__rpc__pb2.get_double_encrypted_id_request.FromString,
                    response_serializer=client__rpc__pb2.get_double_encrypted_id_response.SerializeToString,
            ),
            'send_double_encrypted_id_list': grpc.unary_unary_rpc_method_handler(
                    servicer.send_double_encrypted_id_list,
                    request_deserializer=client__rpc__pb2.send_double_encrypted_id_request.FromString,
                    response_serializer=client__rpc__pb2.send_double_encrypted_id_response.SerializeToString,
            ),
            'send_psi_result': grpc.unary_unary_rpc_method_handler(
                    servicer.send_psi_result,
                    request_deserializer=client__rpc__pb2.send_psi_result_request.FromString,
                    response_serializer=client__rpc__pb2.send_psi_result_response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.ClientService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientService(object):
    """定义客户端接收领导节点请求的 gRPC 服务
    """

    @staticmethod
    def get_id_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/get_id_list',
            client__rpc__pb2.id_request.SerializeToString,
            client__rpc__pb2.id_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_single_query_result(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/get_single_query_result',
            client__rpc__pb2.query_request.SerializeToString,
            client__rpc__pb2.query_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_data_sample(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/get_data_sample',
            client__rpc__pb2.data_sample_request.SerializeToString,
            client__rpc__pb2.data_sample_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_id_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/update_id_list',
            client__rpc__pb2.update_id_list_request.SerializeToString,
            client__rpc__pb2.update_id_list_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_column_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/get_column_list',
            client__rpc__pb2.column_request.SerializeToString,
            client__rpc__pb2.column_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_psi_result(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/get_psi_result',
            client__rpc__pb2.get_psi_result_request.SerializeToString,
            client__rpc__pb2.get_psi_result_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_dist_metric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/get_dist_metric',
            client__rpc__pb2.dist_metric_request.SerializeToString,
            client__rpc__pb2.dist_metric_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_psi_order(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/send_psi_order',
            client__rpc__pb2.send_psi_order_request.SerializeToString,
            client__rpc__pb2.send_psi_order_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_encrypted_id_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/get_encrypted_id_list',
            client__rpc__pb2.get_encrypted_id_request.SerializeToString,
            client__rpc__pb2.get_encrypted_id_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_double_encrypted_id_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/get_double_encrypted_id_list',
            client__rpc__pb2.get_double_encrypted_id_request.SerializeToString,
            client__rpc__pb2.get_double_encrypted_id_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_double_encrypted_id_list(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/send_double_encrypted_id_list',
            client__rpc__pb2.send_double_encrypted_id_request.SerializeToString,
            client__rpc__pb2.send_double_encrypted_id_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def send_psi_result(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.ClientService/send_psi_result',
            client__rpc__pb2.send_psi_result_request.SerializeToString,
            client__rpc__pb2.send_psi_result_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
